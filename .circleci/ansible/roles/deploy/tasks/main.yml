---
- name: copy dist backend folder to ec2 server
  become: yes
  copy:
    src: ~/project/artifact.tar.gz
    dest: /home/ubuntu/artifact.tar.gz

- name: prepare binaries
  become: true
  shell: |
    cd /home/ubuntu
    tar xvzf artifact.tar.gz -C .
- name: start server
  become: true
  shell: |
    cd /home/ubuntu
    pm2 start npm --name backend -- start
- name: Echo my_env_var
  shell: "echo $TYPEORM_MIGRATIONS_DIR"
  environment:
    TYPEORM_MIGRATIONS_DIR: ./migrations

- name: Echo my_env_var again
  shell: "echo $TYPEORM_ENTITIES"
  environment:
    TYPEORM_ENTITIES: ./modules/domain/**/*.entity{.ts,.js}

- name: Echo my_env_var
  shell: "echo $TYPEORM_MIGRATIONS"
  environment:
    TYPEORM_MIGRATIONS: ./migrations/*.ts

- name: Echo my_env_var
  shell: "echo $TYPEORM_HOST"
  environment:
    TYPEORM_HOST: postgres.cexa18yoahsu.us-east-1.rds.amazonaws.com

- name: Echo my_env_var
  shell: "echo $TYPEORM_USERNAME"
  environment:
    TYPEORM_USERNAME: postgres     

- name: Echo my_env_var
  shell: "echo $TYPEORM_PASSWORD"
  environment:
    TYPEORM_PASSWORD: password

- name: Echo my_env_var
  shell: "echo $TYPEORM_DATABASE"
  environment:
    TYPEORM_DATABASE: glee2

- name: "Executing Node app with PM2"
  become: true
  shell: |
    cd /home/ubuntu/dist
    pm2 stop backend
    pm2 start main.js

  register: execute_node

- name: print message
  become: true
  debug:
    msg: "{{ execute_node.stdout_lines }}"   
- name: "Configure pm2 to start as service"
  become: true
  shell: |
    sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
    pm2 save     
  # environment:
  #     ENVIRONMENT: production
  #     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
  #     TYPEORM_MIGRATIONS_DIR: "./migrations"
  #     TYPEORM_MIGRATIONS: "./migrations/*.js"
  #     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
  #     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
  #     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
  #     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
  #     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
  #     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
