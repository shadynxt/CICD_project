---
- name: copy dist backend folder to ec2 server
  become: yes
  copy:
    src: ~/project/artifact.tar.gz
    dest: /home/ubuntu/artifact.tar.gz

- name: prepare binaries
  become: true
  shell: |
    cd /home/ubuntu
    tar xvzf artifact.tar.gz -C .
- name: start server
  become: true
  shell: |
    cd /home/ubuntu
    pm2 start npm --name backend -- start
- name: "Executing Node app with PM2"
  shell: |
    cd /home/ubuntu/dist
    pm2 stop backend
    export TYPEORM_MIGRATIONS_DIR=./migrations
    export TYPEORM_ENTITIES=./modules/domain/**/*.entity{.ts,.js}
    export TYPEORM_MIGRATIONS=./migrations/*.ts
    export TYPEORM_HOST=postgres.cexa18yoahsu.us-east-1.rds.amazonaws.com
    export TYPEORM_USERNAME=postgres
    export TYPEORM_PASSWORD=password
    export TYPEORM_DATABASE=glee2
    pm2 start main.js

  register: execute_node

- name: print message
  debug:
    msg: "{{ execute_node.stdout_lines }}"   
- name: "Configure pm2 to start as service"
  shell: |
    sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
    pm2 save     
  environment:
      ENVIRONMENT: production
      TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
      TYPEORM_MIGRATIONS_DIR: "./migrations"
      TYPEORM_MIGRATIONS: "./migrations/*.js"
      TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
      TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
      TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
      TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
      TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
      TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
